syntax = "proto3";

package wilson.api.manager.user.v1;

option go_package = "manager/user/v1;v1";

import "manager/user/v1/manager_user.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service User{

  // GetUser
  rpc GetUser (GetUserRequest) returns (GetUserReply) {
    option (google.api.http) = {
      get: "/manager/api/v1/user",
    };
  }

  // ListUser
  rpc ListUser (ListUserRequest) returns (ListUserReply) {
    option (google.api.http) = {
      get: "/manager/api/v1/users",
    };
  }

  // CreateUser
  rpc CreateUser (CreateUserRequest) returns (CreateUserReply) {
    option (google.api.http) = {
      post: "/manager/api/v1/user",
      body: "*"
    };
  }

  // UpdateUser
  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserReply) {
    option (google.api.http) = {
      put: "/manager/api/v1/user",
      body: "*"
    };
  }

  // UpdateUserStatus
  rpc UpdateUserStatus (UpdateUserStatusRequest) returns (UpdateUserStatusReply) {
    option (google.api.http) = {
      put: "/manager/api/v1/user/status",
      body: "*"
    };
  }

  // DeleteUser
  rpc DeleteUser (DeleteUserRequest) returns (DeleteUserReply) {
    option (google.api.http) = {
      delete: "/manager/api/v1/user",
    };
  }

  // GetCurrentUser
  rpc GetCurrentUser (google.protobuf.Empty) returns (GetUserReply) {
    option (google.api.http) = {
      get: "/manager/api/v1/user/current",
    };
  }

  // ResetUserPassword
  rpc ResetUserPassword(ResetUserPasswordRequest) returns (ResetUserPasswordReply) {
    option (google.api.http) = {
      post: "/manager/api/v1/user/password/reset",
      body: "*"
    };
  }

  // UpdateCurrentUser
  rpc UpdateCurrentUser (UpdateCurrentUserRequest) returns (UpdateCurrentUserReply) {
    option (google.api.http) = {
      put: "/manager/api/v1/user/current/info",
      body: "*"
    };
  }

  // UpdateCurrentUserRole
  rpc UpdateCurrentUserRole (UpdateCurrentUserRoleRequest) returns (UpdateCurrentUserRoleReply) {
    option (google.api.http) = {
      put: "/manager/api/v1/user/current/role",
      body: "*"
    };
  }

  // UpdateCurrentUserPassword
  rpc UpdateCurrentUserPassword(UpdateCurrentUserPasswordRequest) returns (UpdateCurrentUserPasswordReply) {
    option (google.api.http) = {
      put: "/manager/api/v1/user/current/password",
      body: "*"
    };
  }

  // UpdateCurrentUserSetting
  rpc UpdateCurrentUserSetting(UpdateCurrentUserSettingRequest) returns (UpdateCurrentUserSettingReply) {
    option (google.api.http) = {
      put: "/manager/api/v1/user/current/setting",
      body: "*"
    };
  }

  // SendCurrentUserCaptcha
  rpc SendCurrentUserCaptcha(SendCurrentUserCaptchaRequest) returns (SendCurrentUserCaptchaReply) {
    option (google.api.http) = {
      post: "/manager/api/v1/user/current/captcha",
      body: "*"
    };
  }

  // GetUserLoginCaptcha
  rpc GetUserLoginCaptcha(google.protobuf.Empty) returns(GetUserLoginCaptchaReply){
    option (google.api.http) = {
      get: "/manager/api/v1/user/login/captcha",
    };
  }

  // UserLogin
  rpc UserLogin(UserLoginRequest) returns(UserLoginReply){
    option (google.api.http) = {
      post: "/manager/api/v1/user/login",
      body: "*"
    };
  }

  // UserLogout
  rpc UserLogout(google.protobuf.Empty) returns(google.protobuf.Empty){
    option (google.api.http) = {
      post: "/manager/api/v1/user/logout",
      body: "*"
    };
  }

  // UserRefreshToken
  rpc UserRefreshToken(google.protobuf.Empty) returns(UserRefreshTokenReply){
    option (google.api.http) = {
      post: "/manager/api/v1/user/token/refresh",
      body: "*"
    };
  }

  // ListLoginLog
  rpc ListLoginLog (ListLoginLogRequest) returns (ListLoginLogReply) {
    option (google.api.http) = {
      get: "/manager/api/v1/user/login/logs",
    };
  }


}