syntax = "proto3";

package wilson.api.configure.resource.v1;

option go_package = "configure/resource/v1;v1";

import "configure/resource/v1/configure_resource_value.proto";
import "configure/resource/v1/configure_resource.proto";
import "google/api/annotations.proto";

service Resource{

  // GetResource
  rpc GetResource (GetResourceRequest) returns (GetResourceReply) {
    option (google.api.http) = {
      get: "/configure/api/v1/resource",
    };
  }

  // ListResource
  rpc ListResource (ListResourceRequest) returns (ListResourceReply) {
    option (google.api.http) = {
      get: "/configure/api/v1/resources",
    };
  }

  // CreateResource
  rpc CreateResource (CreateResourceRequest) returns (CreateResourceReply) {
    option (google.api.http) = {
      post: "/configure/api/v1/resource",
      body: "*"
    };
  }

  // UpdateResource
  rpc UpdateResource (UpdateResourceRequest) returns (UpdateResourceReply) {
    option (google.api.http) = {
      put: "/configure/api/v1/resource",
      body: "*"
    };
  }

  // DeleteResource
  rpc DeleteResource (DeleteResourceRequest) returns (DeleteResourceReply) {
    option (google.api.http) = {
      delete: "/configure/api/v1/resource",
    };
  }

  // ListResourceValue
  rpc ListResourceValue (ListResourceValueRequest) returns (ListResourceValueReply) {
    option (google.api.http) = {
      get: "/configure/api/v1/resource/values",
    };
  }

  // UpdateResourceValue
  rpc UpdateResourceValue (UpdateResourceValueRequest) returns (UpdateResourceValueReply) {
    option (google.api.http) = {
      put: "/configure/api/v1/resource/values",
      body: "*"
    };
  }

}