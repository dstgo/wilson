syntax = "proto3";

package errors;

import "errors/errors.proto";
option go_package = "errors/;errors";

enum ErrorReason {
  // Default error code option
  option (errors.default_code) = 500;

  // Common errors (0-999)
  SystemError = 0 [(errors.message) = "system error"];
  FileSystemError = 1 [(errors.message) = "file system error"];
  NetWorkError = 2 [(errors.message) = "network error"];
  DatabaseError = 3 [(errors.message) = "database error"];
  ParamsError = 4 [(errors.message) = "parameter error"];
  TransformError = 5 [(errors.message) = "transform error"];
  GetError = 6 [(errors.message) = "query error"];
  ListError = 7 [(errors.message) = "list query error"];
  CreateError = 8 [(errors.message) = "create error"];
  ImportError = 9 [(errors.message) = "import error"];
  ExportError = 10 [(errors.message) = "export error"];
  UpdateError = 11 [(errors.message) = "update error"];
  DeleteError = 12 [(errors.message) = "delete error"];

  // Config service errors (1000-1999)
  ConfigServiceError = 1000 [(errors.message) = "configure service error"];
  GetTrashError = 1001 [(errors.message) = "get trash error"];
  ListTrashError = 1002 [(errors.message) = "list trash error"];
  DeleteTrashError = 1003 [(errors.message) = "delete trash error"];
  RevertTrashError = 1004 [(errors.message) = "revert trash error"];
  BusinessValueTypeError = 1005 [(errors.message) = "business value type error"];
  ResourceValueTypeError = 1006 [(errors.message) = "resource configuration value type error"];
  RenderTemplateError = 1007 [(errors.message) = "render template error"];
  TemplateVersionExistError = 1008 [(errors.message) = "template version already exists"];
  ServerNotExistTemplateError = 1009 [(errors.message) = "current service has not submitted a template yet"];
  ConfigureVersionExistError = 1010 [(errors.message) = "configuration version already exists"];
  WatchConfigureError = 1011 [(errors.message) = "failed to watch version update"];
  TokenAuthError = 1012 [(errors.message) = "token authentication failed"];
  ServerNotFound = 1013 [(errors.message) = "service not found"];
  PasswordError = 1014 [(errors.message) = "incorrect password"];
  PasswordExpireError = 1015 [(errors.message) = "password has expired"];
  RefreshTokenError = 1016 [(errors.code) = 401, (errors.message) = "failed to refresh token"];
  BroadcastConfigureError = 1017 [(errors.message) = "failed to broadcast configuration change message"];

  // Resource service errors (2000-2999)
  ResourceServiceError = 2000 [(errors.message) = "resource service error"];
  NoSupportStoreError = 2001 [(errors.message) = "unsupported storage engine"];
  NoSupportFileTypeError = 2002 [(errors.message) = "unsupported file type"];
  VerifySignError = 2003 [(errors.message) = "signature verification failed"];
  ChunkUploadError = 2004 [(errors.message) = "chunk upload failed"];
  StatusProgressError = 2005 [(errors.message) = "file upload in progress"];
  UploadFileError = 2006 [(errors.message) = "file upload failed"];
  InitStoreError = 2007 [(errors.message) = "storage engine initialization failed"];
  FileFormatError = 2008 [(errors.message) = "file format error"];
  NotExistFileError = 2009 [(errors.message) = "file does not exist"];
  AlreadyExistFileNameError = 2010 [(errors.message) = "file name already exists"];
  AccessResourceError = 2011 [(errors.message) = "resource file access error"];
  ExportFileNameDupError = 2012 [(errors.message) = "export file rename duplicate"];
  ExportTaskProcessError = 2013 [(errors.message) = "export task is in progress"];
  ExceedMaxSizeError = 2014 [(errors.message) = "exceeds allowed upload file size"];

  // Manager service errors (3000-3999)
  ManagerServiceError = 3000 [(errors.message) = "manager service error"];
  DepartmentPurviewError = 3001 [(errors.message) = "no permission for this department"];
  RolePurviewError = 3002 [(errors.message) = "no permission for this role"];
  UserPurviewError = 3003 [(errors.message) = "no permission for this user"];
  MenuPurviewError = 3004 [(errors.message) = "no permission for this menu"];
  EditSystemDataError = 3005 [(errors.message) = "system data, modification not allowed"];
  GenCaptchaError = 3006 [(errors.message) = "failed to generate captcha"];
  SendCaptchaError = 3007 [(errors.message) = "failed to send captcha"];
  DeleteSystemDataError = 3008 [(errors.message) = "system data, deletion not allowed"];
  VerifyCaptchaError = 3009 [(errors.message) = "incorrect captcha"];
  UsernameFormatError = 3010 [(errors.message) = "username format error"];
  UsernameNotExistError = 3011 [(errors.message) = "user does not exist"];
  UserDisableError = 3012 [(errors.message) = "user has been disabled"];
  RoleDisableError = 3013 [(errors.message) = "role has been disabled"];
  GenTokenError = 3014 [(errors.message) = "failed to generate token"];
  ParseTokenError = 3015 [(errors.message) = "failed to parse token"];
  ForbiddenError = 3016 [(errors.code) = 403, (errors.message) = "no interface permission"];
  NotPermissionError = 3017 [(errors.message) = "no resource permission"];

  // Usercenter errors (4000-4999)
  UserServiceError = 4000 [(errors.message) = "user service error"];
  GenCaptchaTypeError = 4001 [(errors.message) = "incorrect captcha type"];
  NotExistEmailError = 4002 [(errors.message) = "email does not exist"];
  OAuthLoginError = 4003 [(errors.message) = "third-party authorization login failed"];
  NotUserError = 4004 [(errors.message) = "user does not exist"];
  NotAppScopeError = 4005 [(errors.message) = "user has no application permission"];
  RsaDecodeError = 4006 [(errors.message) = "RSA decryption failed"];
  PasswordFormatError = 4007 [(errors.message) = "password format error"];
  DisableRegisterError = 4008 [(errors.code) = 401, (errors.message) = "application has closed registration"];
  AlreadyExistEmailError = 4009 [(errors.message) = "email already exists"];
  AlreadyExistUsernameError = 4010 [(errors.message) = "account already exists"];
  RegisterError = 4011 [(errors.message) = "user registration failed"];
  BindError = 4012 [(errors.message) = "user binding failed"];
  LoginError = 4013 [(errors.message) = "login failed"];
  ExistFeedbackError = 4014 [(errors.message) = "duplicate feedback content already exists"];
  AlreadyBindError = 4015 [(errors.message) = "this account has already been bound to another platform, cannot be bound again"];
  AppMaintenanceError = 4016 [(errors.message) = "current application is under maintenance"];
  ChannelCloseError = 4017 [(errors.message) = "current channel is closed"];
  AppNotBindChannelError = 4018 [(errors.message) = "application has not opened this channel"];
  ChannelNotBindUserError = 4019 [(errors.message) = "current authorized channel is not bound to a user"];
}
