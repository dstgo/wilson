// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.2
// source: configure/template/v1/configure_template.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListTemplateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          uint32                 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      uint32                 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	ServerId      uint32                 `protobuf:"varint,3,opt,name=serverId,proto3" json:"serverId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTemplateRequest) Reset() {
	*x = ListTemplateRequest{}
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemplateRequest) ProtoMessage() {}

func (x *ListTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemplateRequest.ProtoReflect.Descriptor instead.
func (*ListTemplateRequest) Descriptor() ([]byte, []int) {
	return file_configure_template_v1_configure_template_proto_rawDescGZIP(), []int{0}
}

func (x *ListTemplateRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListTemplateRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListTemplateRequest) GetServerId() uint32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

type ListTemplateReply struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Total         uint32                        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List          []*ListTemplateReply_Template `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTemplateReply) Reset() {
	*x = ListTemplateReply{}
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTemplateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemplateReply) ProtoMessage() {}

func (x *ListTemplateReply) ProtoReflect() protoreflect.Message {
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemplateReply.ProtoReflect.Descriptor instead.
func (*ListTemplateReply) Descriptor() ([]byte, []int) {
	return file_configure_template_v1_configure_template_proto_rawDescGZIP(), []int{1}
}

func (x *ListTemplateReply) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListTemplateReply) GetList() []*ListTemplateReply_Template {
	if x != nil {
		return x.List
	}
	return nil
}

type CurrentTemplateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      uint32                 `protobuf:"varint,1,opt,name=serverId,proto3" json:"serverId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CurrentTemplateRequest) Reset() {
	*x = CurrentTemplateRequest{}
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrentTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentTemplateRequest) ProtoMessage() {}

func (x *CurrentTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentTemplateRequest.ProtoReflect.Descriptor instead.
func (*CurrentTemplateRequest) Descriptor() ([]byte, []int) {
	return file_configure_template_v1_configure_template_proto_rawDescGZIP(), []int{2}
}

func (x *CurrentTemplateRequest) GetServerId() uint32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

type CurrentTemplateReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ServerId      uint32                 `protobuf:"varint,2,opt,name=serverId,proto3" json:"serverId,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Version       string                 `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Format        string                 `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty"`
	IsUse         bool                   `protobuf:"varint,6,opt,name=isUse,proto3" json:"isUse,omitempty"`
	Compare       string                 `protobuf:"bytes,7,opt,name=compare,proto3" json:"compare,omitempty"`
	Content       string                 `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`
	CreatedAt     uint32                 `protobuf:"varint,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CurrentTemplateReply) Reset() {
	*x = CurrentTemplateReply{}
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrentTemplateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentTemplateReply) ProtoMessage() {}

func (x *CurrentTemplateReply) ProtoReflect() protoreflect.Message {
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentTemplateReply.ProtoReflect.Descriptor instead.
func (*CurrentTemplateReply) Descriptor() ([]byte, []int) {
	return file_configure_template_v1_configure_template_proto_rawDescGZIP(), []int{3}
}

func (x *CurrentTemplateReply) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CurrentTemplateReply) GetServerId() uint32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *CurrentTemplateReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CurrentTemplateReply) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CurrentTemplateReply) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *CurrentTemplateReply) GetIsUse() bool {
	if x != nil {
		return x.IsUse
	}
	return false
}

func (x *CurrentTemplateReply) GetCompare() string {
	if x != nil {
		return x.Compare
	}
	return ""
}

func (x *CurrentTemplateReply) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CurrentTemplateReply) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type GetTemplateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTemplateRequest) Reset() {
	*x = GetTemplateRequest{}
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateRequest) ProtoMessage() {}

func (x *GetTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetTemplateRequest) Descriptor() ([]byte, []int) {
	return file_configure_template_v1_configure_template_proto_rawDescGZIP(), []int{4}
}

func (x *GetTemplateRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTemplateReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ServerId      uint32                 `protobuf:"varint,2,opt,name=serverId,proto3" json:"serverId,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Version       string                 `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Format        string                 `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty"`
	IsUse         bool                   `protobuf:"varint,6,opt,name=isUse,proto3" json:"isUse,omitempty"`
	Compare       string                 `protobuf:"bytes,7,opt,name=compare,proto3" json:"compare,omitempty"`
	Content       string                 `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`
	CreatedAt     uint32                 `protobuf:"varint,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTemplateReply) Reset() {
	*x = GetTemplateReply{}
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTemplateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateReply) ProtoMessage() {}

func (x *GetTemplateReply) ProtoReflect() protoreflect.Message {
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateReply.ProtoReflect.Descriptor instead.
func (*GetTemplateReply) Descriptor() ([]byte, []int) {
	return file_configure_template_v1_configure_template_proto_rawDescGZIP(), []int{5}
}

func (x *GetTemplateReply) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetTemplateReply) GetServerId() uint32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *GetTemplateReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetTemplateReply) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetTemplateReply) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *GetTemplateReply) GetIsUse() bool {
	if x != nil {
		return x.IsUse
	}
	return false
}

func (x *GetTemplateReply) GetCompare() string {
	if x != nil {
		return x.Compare
	}
	return ""
}

func (x *GetTemplateReply) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetTemplateReply) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type CreateTemplateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      uint32                 `protobuf:"varint,1,opt,name=serverId,proto3" json:"serverId,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Format        string                 `protobuf:"bytes,4,opt,name=format,proto3" json:"format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTemplateRequest) Reset() {
	*x = CreateTemplateRequest{}
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTemplateRequest) ProtoMessage() {}

func (x *CreateTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateTemplateRequest) Descriptor() ([]byte, []int) {
	return file_configure_template_v1_configure_template_proto_rawDescGZIP(), []int{6}
}

func (x *CreateTemplateRequest) GetServerId() uint32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *CreateTemplateRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateTemplateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateTemplateRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

type CreateTemplateReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTemplateReply) Reset() {
	*x = CreateTemplateReply{}
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTemplateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTemplateReply) ProtoMessage() {}

func (x *CreateTemplateReply) ProtoReflect() protoreflect.Message {
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTemplateReply.ProtoReflect.Descriptor instead.
func (*CreateTemplateReply) Descriptor() ([]byte, []int) {
	return file_configure_template_v1_configure_template_proto_rawDescGZIP(), []int{7}
}

func (x *CreateTemplateReply) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SwitchTemplateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ServerId      uint32                 `protobuf:"varint,2,opt,name=serverId,proto3" json:"serverId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchTemplateRequest) Reset() {
	*x = SwitchTemplateRequest{}
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchTemplateRequest) ProtoMessage() {}

func (x *SwitchTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchTemplateRequest.ProtoReflect.Descriptor instead.
func (*SwitchTemplateRequest) Descriptor() ([]byte, []int) {
	return file_configure_template_v1_configure_template_proto_rawDescGZIP(), []int{8}
}

func (x *SwitchTemplateRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SwitchTemplateRequest) GetServerId() uint32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

type SwitchTemplateReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchTemplateReply) Reset() {
	*x = SwitchTemplateReply{}
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchTemplateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchTemplateReply) ProtoMessage() {}

func (x *SwitchTemplateReply) ProtoReflect() protoreflect.Message {
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchTemplateReply.ProtoReflect.Descriptor instead.
func (*SwitchTemplateReply) Descriptor() ([]byte, []int) {
	return file_configure_template_v1_configure_template_proto_rawDescGZIP(), []int{9}
}

type PreviewTemplateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EnvId         uint32                 `protobuf:"varint,1,opt,name=envId,proto3" json:"envId,omitempty"`
	ServerId      uint32                 `protobuf:"varint,2,opt,name=serverId,proto3" json:"serverId,omitempty"`
	Format        string                 `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreviewTemplateRequest) Reset() {
	*x = PreviewTemplateRequest{}
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreviewTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviewTemplateRequest) ProtoMessage() {}

func (x *PreviewTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviewTemplateRequest.ProtoReflect.Descriptor instead.
func (*PreviewTemplateRequest) Descriptor() ([]byte, []int) {
	return file_configure_template_v1_configure_template_proto_rawDescGZIP(), []int{10}
}

func (x *PreviewTemplateRequest) GetEnvId() uint32 {
	if x != nil {
		return x.EnvId
	}
	return 0
}

func (x *PreviewTemplateRequest) GetServerId() uint32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *PreviewTemplateRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *PreviewTemplateRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type PreviewTemplateReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreviewTemplateReply) Reset() {
	*x = PreviewTemplateReply{}
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreviewTemplateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviewTemplateReply) ProtoMessage() {}

func (x *PreviewTemplateReply) ProtoReflect() protoreflect.Message {
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviewTemplateReply.ProtoReflect.Descriptor instead.
func (*PreviewTemplateReply) Descriptor() ([]byte, []int) {
	return file_configure_template_v1_configure_template_proto_rawDescGZIP(), []int{11}
}

func (x *PreviewTemplateReply) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ParseTemplateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      uint32                 `protobuf:"varint,1,opt,name=serverId,proto3" json:"serverId,omitempty"`
	EnvId         uint32                 `protobuf:"varint,2,opt,name=envId,proto3" json:"envId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParseTemplateRequest) Reset() {
	*x = ParseTemplateRequest{}
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseTemplateRequest) ProtoMessage() {}

func (x *ParseTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseTemplateRequest.ProtoReflect.Descriptor instead.
func (*ParseTemplateRequest) Descriptor() ([]byte, []int) {
	return file_configure_template_v1_configure_template_proto_rawDescGZIP(), []int{12}
}

func (x *ParseTemplateRequest) GetServerId() uint32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *ParseTemplateRequest) GetEnvId() uint32 {
	if x != nil {
		return x.EnvId
	}
	return 0
}

type ParseTemplateReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Format        string                 `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParseTemplateReply) Reset() {
	*x = ParseTemplateReply{}
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseTemplateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseTemplateReply) ProtoMessage() {}

func (x *ParseTemplateReply) ProtoReflect() protoreflect.Message {
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseTemplateReply.ProtoReflect.Descriptor instead.
func (*ParseTemplateReply) Descriptor() ([]byte, []int) {
	return file_configure_template_v1_configure_template_proto_rawDescGZIP(), []int{13}
}

func (x *ParseTemplateReply) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ParseTemplateReply) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

type CompareTemplateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Format        string                 `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompareTemplateRequest) Reset() {
	*x = CompareTemplateRequest{}
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompareTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareTemplateRequest) ProtoMessage() {}

func (x *CompareTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareTemplateRequest.ProtoReflect.Descriptor instead.
func (*CompareTemplateRequest) Descriptor() ([]byte, []int) {
	return file_configure_template_v1_configure_template_proto_rawDescGZIP(), []int{14}
}

func (x *CompareTemplateRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CompareTemplateRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *CompareTemplateRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CompareTemplateReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*CompareTemplateInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompareTemplateReply) Reset() {
	*x = CompareTemplateReply{}
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompareTemplateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareTemplateReply) ProtoMessage() {}

func (x *CompareTemplateReply) ProtoReflect() protoreflect.Message {
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareTemplateReply.ProtoReflect.Descriptor instead.
func (*CompareTemplateReply) Descriptor() ([]byte, []int) {
	return file_configure_template_v1_configure_template_proto_rawDescGZIP(), []int{15}
}

func (x *CompareTemplateReply) GetList() []*CompareTemplateInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type CompareTemplateInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Old           string                 `protobuf:"bytes,3,opt,name=old,proto3" json:"old,omitempty"`
	Cur           string                 `protobuf:"bytes,4,opt,name=cur,proto3" json:"cur,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompareTemplateInfo) Reset() {
	*x = CompareTemplateInfo{}
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompareTemplateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompareTemplateInfo) ProtoMessage() {}

func (x *CompareTemplateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompareTemplateInfo.ProtoReflect.Descriptor instead.
func (*CompareTemplateInfo) Descriptor() ([]byte, []int) {
	return file_configure_template_v1_configure_template_proto_rawDescGZIP(), []int{16}
}

func (x *CompareTemplateInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CompareTemplateInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CompareTemplateInfo) GetOld() string {
	if x != nil {
		return x.Old
	}
	return ""
}

func (x *CompareTemplateInfo) GetCur() string {
	if x != nil {
		return x.Cur
	}
	return ""
}

type ListTemplateReply_Template struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ServerId      uint32                 `protobuf:"varint,2,opt,name=serverId,proto3" json:"serverId,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Version       string                 `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Format        string                 `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty"`
	IsUse         bool                   `protobuf:"varint,6,opt,name=isUse,proto3" json:"isUse,omitempty"`
	Compare       string                 `protobuf:"bytes,7,opt,name=compare,proto3" json:"compare,omitempty"`
	CreatedAt     uint32                 `protobuf:"varint,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTemplateReply_Template) Reset() {
	*x = ListTemplateReply_Template{}
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTemplateReply_Template) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTemplateReply_Template) ProtoMessage() {}

func (x *ListTemplateReply_Template) ProtoReflect() protoreflect.Message {
	mi := &file_configure_template_v1_configure_template_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTemplateReply_Template.ProtoReflect.Descriptor instead.
func (*ListTemplateReply_Template) Descriptor() ([]byte, []int) {
	return file_configure_template_v1_configure_template_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ListTemplateReply_Template) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListTemplateReply_Template) GetServerId() uint32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *ListTemplateReply_Template) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ListTemplateReply_Template) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ListTemplateReply_Template) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *ListTemplateReply_Template) GetIsUse() bool {
	if x != nil {
		return x.IsUse
	}
	return false
}

func (x *ListTemplateReply_Template) GetCompare() string {
	if x != nil {
		return x.Compare
	}
	return ""
}

func (x *ListTemplateReply_Template) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

var File_configure_template_v1_configure_template_proto protoreflect.FileDescriptor

var file_configure_template_v1_configure_template_proto_rawDesc = string([]byte{
	0x0a, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x2f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x20, 0x77, 0x69, 0x6c, 0x73, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e,
	0x76, 0x31, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7e, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x25, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x2a, 0x04, 0x18, 0x32, 0x20, 0x00, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x23, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20,
	0x00, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0xd6, 0x02, 0x0a, 0x11,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x50, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x77, 0x69, 0x6c, 0x73, 0x6f, 0x6e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0xd8, 0x01, 0x0a, 0x08, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x55, 0x73, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x55, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x3d, 0x0a, 0x16, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xfe, 0x01, 0x0a, 0x14, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x73, 0x55, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x55,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x2d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xfa, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x55, 0x73,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x55, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xbb, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x03, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01,
	0x18, 0x40, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2d, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x15, 0xfa, 0x42, 0x12, 0x72, 0x10, 0x10, 0x01, 0x18, 0x40, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e,
	0x52, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x25,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x55, 0x0a, 0x15, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a,
	0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02,
	0x20, 0x00, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0xac, 0x01, 0x0a, 0x16, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x13, 0xfa, 0x42, 0x10, 0x72, 0x0e, 0x10, 0x01, 0x52, 0x04, 0x6a, 0x73, 0x6f,
	0x6e, 0x52, 0x04, 0x79, 0x61, 0x6d, 0x6c, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12,
	0x21, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x07, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0x30, 0x0a, 0x14, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0x5a, 0x0a, 0x14, 0x50, 0x61, 0x72, 0x73, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64,
	0x22, 0x46, 0x0a, 0x12, 0x50, 0x61, 0x72, 0x73, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x16, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x06,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xfa, 0x42,
	0x10, 0x72, 0x0e, 0x10, 0x01, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x52, 0x04, 0x79, 0x61, 0x6d,
	0x6c, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x21, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x61, 0x0a, 0x14,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x49, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x77, 0x69, 0x6c, 0x73, 0x6f, 0x6e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x5f, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6f, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x6c, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x75, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x75, 0x72,
	0x42, 0x1a, 0x5a, 0x18, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x2f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_configure_template_v1_configure_template_proto_rawDescOnce sync.Once
	file_configure_template_v1_configure_template_proto_rawDescData []byte
)

func file_configure_template_v1_configure_template_proto_rawDescGZIP() []byte {
	file_configure_template_v1_configure_template_proto_rawDescOnce.Do(func() {
		file_configure_template_v1_configure_template_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_configure_template_v1_configure_template_proto_rawDesc), len(file_configure_template_v1_configure_template_proto_rawDesc)))
	})
	return file_configure_template_v1_configure_template_proto_rawDescData
}

var file_configure_template_v1_configure_template_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_configure_template_v1_configure_template_proto_goTypes = []any{
	(*ListTemplateRequest)(nil),        // 0: wilson.api.configure.template.v1.ListTemplateRequest
	(*ListTemplateReply)(nil),          // 1: wilson.api.configure.template.v1.ListTemplateReply
	(*CurrentTemplateRequest)(nil),     // 2: wilson.api.configure.template.v1.CurrentTemplateRequest
	(*CurrentTemplateReply)(nil),       // 3: wilson.api.configure.template.v1.CurrentTemplateReply
	(*GetTemplateRequest)(nil),         // 4: wilson.api.configure.template.v1.GetTemplateRequest
	(*GetTemplateReply)(nil),           // 5: wilson.api.configure.template.v1.GetTemplateReply
	(*CreateTemplateRequest)(nil),      // 6: wilson.api.configure.template.v1.CreateTemplateRequest
	(*CreateTemplateReply)(nil),        // 7: wilson.api.configure.template.v1.CreateTemplateReply
	(*SwitchTemplateRequest)(nil),      // 8: wilson.api.configure.template.v1.SwitchTemplateRequest
	(*SwitchTemplateReply)(nil),        // 9: wilson.api.configure.template.v1.SwitchTemplateReply
	(*PreviewTemplateRequest)(nil),     // 10: wilson.api.configure.template.v1.PreviewTemplateRequest
	(*PreviewTemplateReply)(nil),       // 11: wilson.api.configure.template.v1.PreviewTemplateReply
	(*ParseTemplateRequest)(nil),       // 12: wilson.api.configure.template.v1.ParseTemplateRequest
	(*ParseTemplateReply)(nil),         // 13: wilson.api.configure.template.v1.ParseTemplateReply
	(*CompareTemplateRequest)(nil),     // 14: wilson.api.configure.template.v1.CompareTemplateRequest
	(*CompareTemplateReply)(nil),       // 15: wilson.api.configure.template.v1.CompareTemplateReply
	(*CompareTemplateInfo)(nil),        // 16: wilson.api.configure.template.v1.CompareTemplateInfo
	(*ListTemplateReply_Template)(nil), // 17: wilson.api.configure.template.v1.ListTemplateReply.Template
}
var file_configure_template_v1_configure_template_proto_depIdxs = []int32{
	17, // 0: wilson.api.configure.template.v1.ListTemplateReply.list:type_name -> wilson.api.configure.template.v1.ListTemplateReply.Template
	16, // 1: wilson.api.configure.template.v1.CompareTemplateReply.list:type_name -> wilson.api.configure.template.v1.CompareTemplateInfo
	2,  // [2:2] is the sub-list for method output_type
	2,  // [2:2] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_configure_template_v1_configure_template_proto_init() }
func file_configure_template_v1_configure_template_proto_init() {
	if File_configure_template_v1_configure_template_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_configure_template_v1_configure_template_proto_rawDesc), len(file_configure_template_v1_configure_template_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_configure_template_v1_configure_template_proto_goTypes,
		DependencyIndexes: file_configure_template_v1_configure_template_proto_depIdxs,
		MessageInfos:      file_configure_template_v1_configure_template_proto_msgTypes,
	}.Build()
	File_configure_template_v1_configure_template_proto = out.File
	file_configure_template_v1_configure_template_proto_goTypes = nil
	file_configure_template_v1_configure_template_proto_depIdxs = nil
}
